{"CommonEmailAddress" :{
  "properties": {
    "address": {
      "description": "A correctly formatted email address, as defined by the addr-spec format in **[[RFC5322]](#nref-RFC5322)**.",
      "type": "string",
      "x-cds-type": "ExternalRef"
    },
    "isPreferred": {
      "description": "May be `true` for one and only one email record in the collection. Denotes the default email address.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "purpose": {
      "description": "The purpose for the email, as specified by the customer.",
      "enum": [
        "HOME",
        "OTHER",
        "UNSPECIFIED",
        "WORK"
      ],
      "type": "string"
    }
  },
  "required": [
    "address",
    "purpose"
  ],
  "type": "object",
  "$id": "CommonEmailAddress"
},"CommonOrganisation" :{
  "properties": {
    "abn": {
      "description": "Australian Business Number for the organisation.",
      "type": [
        "string",
        "null"
      ]
    },
    "acn": {
      "description": "Australian Company Number for the organisation. Required only if an ACN is applicable for the organisation type.",
      "type": [
        "string",
        "null"
      ]
    },
    "agentFirstName": {
      "description": "The first name of the individual providing access on behalf of the organisation. For people with single names this field need not be present. The single name should be in the _lastName_ field.",
      "type": [
        "string",
        "null"
      ]
    },
    "agentLastName": {
      "description": "The last name of the individual providing access on behalf of the organisation. For people with single names, the single name should be in this field.",
      "type": "string"
    },
    "agentRole": {
      "description": "The role of the individual identified as the agent who is providing authorisation. Expected to be used for display. Default to \"Unspecified\" if the role is not known.",
      "type": "string"
    },
    "businessName": {
      "description": "Name of the organisation.",
      "type": "string"
    },
    "establishmentDate": {
      "description": "The date the organisation described was established.",
      "type": [
        "string",
        "null"
      ],
      "x-cds-type": "DateString"
    },
    "industryCode": {
      "description": "A valid [ANZSIC](http://www.abs.gov.au/ANZSIC) code for the organisation. If the industry code held by the data holder is not one of the supported [ANZSIC](http://www.abs.gov.au/ANZSIC) versions, then it must not be supplied.",
      "type": [
        "string",
        "null"
      ],
      "x-cds-type": "ExternalRef"
    },
    "industryCodeVersion": {
      "default": "ANZSIC_1292.0_2006_V2.0",
      "description": "The applicable [ANZSIC](http://www.abs.gov.au/ANZSIC) release version of the industry code provided. Should only be supplied if _industryCode_ is also supplied. If _industryCode_ is supplied but _industryCodeVersion_ is absent, default is `ANZSIC_1292.0_2006_V2.0`.",
      "enum": [
        "ANZSIC_1292.0_2006_V1.0",
        "ANZSIC_1292.0_2006_V2.0"
      ],
      "type": [
        "string",
        "null"
      ]
    },
    "isACNCRegistered": {
      "description": "`true` if registered with the ACNC. `false` if not. Absent or `null` if not confirmed.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "lastUpdateTime": {
      "description": "The date and time that this record was last updated by the customer. If no update has occurred then this date should reflect the initial creation date for the data.",
      "type": [
        "string",
        "null"
      ],
      "x-cds-type": "DateTimeString"
    },
    "legalName": {
      "description": "Legal name, if different to the business name.",
      "type": [
        "string",
        "null"
      ]
    },
    "organisationType": {
      "description": "Legal organisation type.",
      "enum": [
        "COMPANY",
        "GOVERNMENT_ENTITY",
        "OTHER",
        "PARTNERSHIP",
        "SOLE_TRADER",
        "TRUST"
      ],
      "type": "string"
    },
    "registeredCountry": {
      "description": "Enumeration with values from [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country codes. Assumed to be `AUS` if absent.",
      "type": [
        "string",
        "null"
      ],
      "x-cds-type": "ExternalRef"
    },
    "shortName": {
      "description": "Short name used for communication, if different to the business name.",
      "type": [
        "string",
        "null"
      ]
    }
  },
  "required": [
    "agentLastName",
    "agentRole",
    "businessName",
    "organisationType"
  ],
  "type": "object",
  "x-conditional": [
    "industryCodeVersion"
  ],
  "$id": "CommonOrganisation"
},"CommonOrganisationDetailV2" :{
  "allOf": [
    {
      "$ref": "CommonOrganisation"
    },
    {
      "required": [
        "physicalAddresses"
      ],
      "type": "object",
      "properties": {
        "physicalAddresses": {
          "type": "array",
          "description": "Array is mandatory but may be empty if no valid addresses are held. One and only one address may have the purpose of `REGISTERED`. Zero or one, and no more than one, record may have the purpose of `MAIL`. If zero then the `REGISTERED` address is to be used for mail.",
          "items": {
            "$ref": "CommonPhysicalAddressWithPurpose"
          }
        }
      }
    }
  ],
  "$id": "CommonOrganisationDetailV2"
},"CommonPAFAddress" :{
  "description": "Australian address formatted according to the file format defined by the [PAF file format](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf). Required if _addressUType_ is set to `paf`.",
  "properties": {
    "buildingName1": {
      "description": "Building/Property name 1.",
      "type": [
        "string",
        "null"
      ]
    },
    "buildingName2": {
      "description": "Building/Property name 2.",
      "type": [
        "string",
        "null"
      ]
    },
    "dpid": {
      "description": "Unique identifier for an address as defined by Australia Post. Also known as Delivery Point Identifier.",
      "type": [
        "string",
        "null"
      ]
    },
    "flatUnitNumber": {
      "description": "Unit number (including suffix, if applicable).",
      "type": [
        "string",
        "null"
      ]
    },
    "flatUnitType": {
      "description": "Type of flat or unit for the address.",
      "type": [
        "string",
        "null"
      ]
    },
    "floorLevelNumber": {
      "description": "Floor or level number (including alpha characters).",
      "type": [
        "string",
        "null"
      ]
    },
    "floorLevelType": {
      "description": "Type of floor or level for the address.",
      "type": [
        "string",
        "null"
      ]
    },
    "localityName": {
      "description": "Full name of locality.",
      "type": "string"
    },
    "lotNumber": {
      "description": "Allotment number for the address.",
      "type": [
        "string",
        "null"
      ]
    },
    "postalDeliveryNumber": {
      "description": "Postal delivery number if the address is a postal delivery type.",
      "type": [
        "integer",
        "null"
      ],
      "x-cds-type": "PositiveInteger"
    },
    "postalDeliveryNumberPrefix": {
      "description": "Postal delivery number prefix related to the postal delivery number.",
      "type": [
        "string",
        "null"
      ]
    },
    "postalDeliveryNumberSuffix": {
      "description": "Postal delivery number suffix related to the postal delivery number.",
      "type": [
        "string",
        "null"
      ]
    },
    "postalDeliveryType": {
      "description": "Postal delivery type. (e.g., PO BOX). Valid enumeration defined by Australia Post PAF code file.",
      "type": [
        "string",
        "null"
      ]
    },
    "postcode": {
      "description": "Postcode for the locality.",
      "type": "string"
    },
    "state": {
      "description": "State in which the address belongs. Valid enumeration defined by Australia Post PAF code file [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf). `NSW`, `QLD`, `VIC`, `NT`, `WA`, `SA`, `TAS`, `ACT`, `AAT`.",
      "type": "string"
    },
    "streetName": {
      "description": "The name of the street.",
      "type": [
        "string",
        "null"
      ]
    },
    "streetSuffix": {
      "description": "The street type suffix. Valid enumeration defined by Australia Post PAF code file.",
      "type": [
        "string",
        "null"
      ]
    },
    "streetType": {
      "description": "The street type. Valid enumeration defined by Australia Post PAF code file.",
      "type": [
        "string",
        "null"
      ]
    },
    "thoroughfareNumber1": {
      "description": "Thoroughfare number for a property (first number in a property ranged address).",
      "type": [
        "integer",
        "null"
      ],
      "x-cds-type": "PositiveInteger"
    },
    "thoroughfareNumber1Suffix": {
      "description": "Suffix for the thoroughfare number. Only relevant if _thoroughfareNumber1_ is populated.",
      "type": [
        "string",
        "null"
      ]
    },
    "thoroughfareNumber2": {
      "description": "Second thoroughfare number (only used if the property has a ranged address e.g., 23-25).",
      "type": [
        "integer",
        "null"
      ],
      "x-cds-type": "PositiveInteger"
    },
    "thoroughfareNumber2Suffix": {
      "description": "Suffix for the second thoroughfare number. Only relevant if _thoroughfareNumber2_ is populated.",
      "type": [
        "string",
        "null"
      ]
    }
  },
  "required": [
    "localityName",
    "postcode",
    "state"
  ],
  "type": "object",
  "$id": "CommonPAFAddress"
},"CommonPerson" :{
  "properties": {
    "firstName": {
      "description": "For people with single names this field need not be present. The single name should be in the _lastName_ field. Where a data holder cannot determine first and middle names from a collection of given names, a single string representing all given names **MAY** be provided.",
      "type": [
        "string",
        "null"
      ]
    },
    "lastName": {
      "description": "For people with single names, the single name should be in this field.",
      "type": "string"
    },
    "lastUpdateTime": {
      "description": "The date and time that this record was last updated by the customer. If no update has occurred then this date should reflect the initial creation date for the data.",
      "type": [
        "string",
        "null"
      ],
      "x-cds-type": "DateTimeString"
    },
    "middleNames": {
      "description": "Field is mandatory but array may be empty.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "occupationCode": {
      "description": "Value is a valid **[[ANZSCO]](#iref-ANZSCO)** Standard Occupation classification code. If the occupation code held by the data holder is not one of the supported **[[ANZSCO]](#iref-ANZSCO)** versions, then it must not be supplied.",
      "type": [
        "string",
        "null"
      ],
      "x-cds-type": "ExternalRef"
    },
    "occupationCodeVersion": {
      "default": "ANZSCO_1220.0_2013_V1.2",
      "description": "The applicable **[[ANZSCO]](#iref-ANZSCO)** release version of the occupation code provided. Mandatory if an _occupationCode_ is supplied. If _occupationCode_ is supplied but _occupationCodeVersion_ is absent, default is `ANZSCO_1220.0_2013_V1.2`.",
      "enum": [
        "ANZSCO_1220.0_2006_V1.0",
        "ANZSCO_1220.0_2006_V1.1",
        "ANZSCO_1220.0_2013_V1.2",
        "ANZSCO_1220.0_2013_V1.3"
      ],
      "type": [
        "string",
        "null"
      ]
    },
    "prefix": {
      "description": "Also known as title or salutation. The prefix to the name (e.g., Mr, Mrs, Ms, Miss, Sir, etc.)",
      "type": [
        "string",
        "null"
      ]
    },
    "suffix": {
      "description": "Used for a trailing suffix to the name (e.g., Jr.)",
      "type": [
        "string",
        "null"
      ]
    }
  },
  "required": [
    "lastName",
    "middleNames"
  ],
  "type": "object",
  "x-conditional": [
    "occupationCodeVersion"
  ],
  "$id": "CommonPerson"
},"CommonPersonDetailV2" :{
  "allOf": [
    {
      "$ref": "CommonPerson"
    },
    {
      "required": [
        "emailAddresses",
        "phoneNumbers",
        "physicalAddresses"
      ],
      "type": "object",
      "properties": {
        "phoneNumbers": {
          "type": "array",
          "description": "Array is mandatory but may be empty if no phone numbers are held.",
          "items": {
            "$ref": "CommonPhoneNumber"
          }
        },
        "emailAddresses": {
          "type": "array",
          "description": "May be empty.",
          "items": {
            "$ref": "CommonEmailAddress"
          }
        },
        "physicalAddresses": {
          "type": "array",
          "description": "Array is mandatory but may be empty if no valid addresses are held. One and only one address may have the purpose of `REGISTERED`. Zero or one, and no more than one, record may have the purpose of `MAIL`. If zero then the `REGISTERED` address is to be used for mail.",
          "items": {
            "$ref": "CommonPhysicalAddressWithPurpose"
          }
        }
      }
    }
  ],
  "$id": "CommonPersonDetailV2"
},"CommonPhoneNumber" :{
  "properties": {
    "areaCode": {
      "description": "Required for non Mobile Phones, if field is present and refers to Australian code - the leading `0` should be omitted.",
      "type": [
        "string",
        "null"
      ]
    },
    "countryCode": {
      "default": "+61",
      "description": "If absent, assumed to be Australia (`+61`). The `+` should be included.",
      "type": [
        "string",
        "null"
      ]
    },
    "extension": {
      "description": "An extension number (if applicable).",
      "type": [
        "string",
        "null"
      ]
    },
    "fullNumber": {
      "description": "Fully formatted phone number with country code, area code, number and extension incorporated. Formatted according to section 5.1.4. of **[[RFC3966]](#iref-RFC3966)**.",
      "type": "string",
      "x-cds-type": "ExternalRef"
    },
    "isPreferred": {
      "default": false,
      "description": "May be `true` for one and only one entry to indicate the preferred phone number. Assumed to be `false` if not present.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "number": {
      "description": "The actual phone number, with leading zeros as appropriate.",
      "type": "string"
    },
    "purpose": {
      "description": "The purpose of the number as specified by the customer.",
      "enum": [
        "HOME",
        "INTERNATIONAL",
        "MOBILE",
        "OTHER",
        "UNSPECIFIED",
        "WORK"
      ],
      "type": "string"
    }
  },
  "required": [
    "fullNumber",
    "number",
    "purpose"
  ],
  "type": "object",
  "x-conditional": [
    "areaCode"
  ],
  "$id": "CommonPhoneNumber"
},"CommonPhysicalAddress" :{
  "properties": {
    "addressUType": {
      "description": "The type of address object present.",
      "enum": [
        "paf",
        "simple"
      ],
      "type": "string"
    },
    "paf": {
      "$ref": "CommonPAFAddress"
    },
    "simple": {
      "$ref": "CommonSimpleAddress"
    }
  },
  "required": [
    "addressUType"
  ],
  "type": "object",
  "x-conditional": [
    "simple",
    "paf"
  ],
  "$id": "CommonPhysicalAddress"
},"CommonPhysicalAddressWithPurpose" :{
  "allOf": [
    {
      "$ref": "CommonPhysicalAddress"
    },
    {
      "required": [
        "purpose"
      ],
      "type": "object",
      "properties": {
        "purpose": {
          "type": "string",
          "description": "Enumeration of values indicating the purpose of the physical address.",
          "enum": [
            "MAIL",
            "OTHER",
            "PHYSICAL",
            "REGISTERED",
            "WORK"
          ]
        }
      }
    }
  ],
  "$id": "CommonPhysicalAddressWithPurpose"
},"CommonSimpleAddress" :{
  "description": "Required if _addressUType_ is set to `simple`.",
  "properties": {
    "addressLine1": {
      "description": "First line of the standard address object.",
      "type": "string"
    },
    "addressLine2": {
      "description": "Second line of the standard address object.",
      "type": [
        "string",
        "null"
      ]
    },
    "addressLine3": {
      "description": "Third line of the standard address object.",
      "type": [
        "string",
        "null"
      ]
    },
    "city": {
      "description": "Name of the city or locality.",
      "type": "string"
    },
    "country": {
      "default": "AUS",
      "description": "A valid [ISO 3166 Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country code. Australia (`AUS`) is assumed if country is not present.",
      "type": [
        "string",
        "null"
      ],
      "x-cds-type": "ExternalRef"
    },
    "mailingName": {
      "description": "Name of the individual or business formatted for inclusion in an address used for physical mail.",
      "type": [
        "string",
        "null"
      ]
    },
    "postcode": {
      "description": "Mandatory for Australian addresses.",
      "type": [
        "string",
        "null"
      ]
    },
    "state": {
      "description": "Free text if the country is not Australia. If country is Australia then must be one of the values defined by the [State Type Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf) in the PAF file format. `NSW`, `QLD`, `VIC`, `NT`, `WA`, `SA`, `TAS`, `ACT`, `AAT`.",
      "type": "string"
    }
  },
  "required": [
    "addressLine1",
    "city",
    "state"
  ],
  "type": "object",
  "x-conditional": [
    "postcode"
  ],
  "$id": "CommonSimpleAddress"
},"DiscoveryOutage" :{
  "properties": {
    "duration": {
      "description": "Planned duration of the outage. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax).",
      "type": "string",
      "x-cds-type": "ExternalRef"
    },
    "explanation": {
      "description": "Provides an explanation of the current outage that can be displayed to an end customer.",
      "type": "string"
    },
    "isPartial": {
      "description": "Flag that indicates, if present and set to `true`, that the outage is only partial meaning that only a subset of normally available endpoints will be affected by the outage.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "outageTime": {
      "description": "Date and time that the outage is scheduled to begin.",
      "type": "string",
      "x-cds-type": "DateTimeString"
    }
  },
  "required": [
    "duration",
    "explanation",
    "outageTime"
  ],
  "type": "object",
  "$id": "DiscoveryOutage"
},"Links" :{
  "properties": {
    "self": {
      "description": "Fully qualified link that generated the current response document.",
      "type": "string",
      "x-cds-type": "URIString"
    }
  },
  "required": [
    "self"
  ],
  "type": "object",
  "$id": "Links"
},"Meta" :{
  "type": "object",
  "$id": "Meta"
},"MetaError" :{
  "description": "Additional data for customised error codes.",
  "properties": {
    "urn": {
      "description": "The CDR error code URN which the application-specific error code extends. Mandatory if the error _code_ is an application-specific error rather than a standardised error code.",
      "type": [
        "string",
        "null"
      ]
    }
  },
  "type": "object",
  "x-conditional": [
    "urn"
  ],
  "$id": "MetaError"
},"ResponseCommonCustomer" :{
  "properties": {
    "data": {
      "properties": {
        "customerUType": {
          "description": "The type of customer object that is present.",
          "enum": [
            "organisation",
            "person"
          ],
          "type": "string"
        },
        "organisation": {
          "$ref": "CommonOrganisation"
        },
        "person": {
          "$ref": "CommonPerson"
        }
      },
      "required": [
        "customerUType"
      ],
      "type": "object",
      "x-conditional": [
        "person",
        "organisation"
      ]
    },
    "links": {
      "$ref": "Links"
    },
    "meta": {
      "$ref": "Meta"
    }
  },
  "required": [
    "data",
    "links"
  ],
  "type": "object",
  "$id": "ResponseCommonCustomer"
},"ResponseCommonCustomerDetailV2" :{
  "properties": {
    "data": {
      "properties": {
        "customerUType": {
          "description": "The type of customer object that is present.",
          "enum": [
            "organisation",
            "person"
          ],
          "type": "string"
        },
        "organisation": {
          "$ref": "CommonOrganisationDetailV2"
        },
        "person": {
          "$ref": "CommonPersonDetailV2"
        }
      },
      "required": [
        "customerUType"
      ],
      "type": "object",
      "x-conditional": [
        "person",
        "organisation"
      ]
    },
    "links": {
      "$ref": "Links"
    },
    "meta": {
      "$ref": "Meta"
    }
  },
  "required": [
    "data",
    "links"
  ],
  "type": "object",
  "$id": "ResponseCommonCustomerDetailV2"
},"ResponseDiscoveryOutagesList" :{
  "properties": {
    "data": {
      "properties": {
        "outages": {
          "description": "List of scheduled outages. Property is mandatory but may contain an empty list if no outages are scheduled.",
          "items": {
            "$ref": "DiscoveryOutage"
          },
          "type": "array"
        }
      },
      "required": [
        "outages"
      ],
      "type": "object"
    },
    "links": {
      "$ref": "Links"
    },
    "meta": {
      "$ref": "Meta"
    }
  },
  "required": [
    "data",
    "links"
  ],
  "type": "object",
  "$id": "ResponseDiscoveryOutagesList"
},"ResponseErrorListV2" :{
  "properties": {
    "errors": {
      "description": "List of errors.",
      "items": {
        "$ref": "ErrorV2"
      },
      "type": "array"
    }
  },
  "required": [
    "errors"
  ],
  "type": "object",
  "$id": "ResponseErrorListV2"
}}