{
  "description": "Indicates that the schedule of payments is defined by a series of intervals. Mandatory if _recurrenceUType_ is set to `intervalSchedule`.",
  "properties": {
    "finalPaymentDate": {
      "description": "The limit date after which no more payments should be made using this schedule. If both _finalPaymentDate_ and _paymentsRemaining_ are present then payments will stop according to the most constraining value. If neither field is present the payments will continue indefinitely.",
      "type": [
        "string",
        "null"
      ],
      "x-cds-type": "DateString"
    },
    "intervals": {
      "description": "An array of interval objects defining the payment schedule. Each entry in the array is additive, in that it adds payments to the overall payment schedule. If multiple intervals result in a payment on the same day then only one payment will be made. Must have at least one entry.",
      "items": {
        "$ref": "BankingScheduledPaymentInterval.json"
      },
      "type": "array"
    },
    "nonBusinessDayTreatment": {
      "default": "ON",
      "description": "Enumerated field giving the treatment where a scheduled payment date is not a business day. If absent assumed to be `ON`.<ul><li>`AFTER` - If a scheduled payment date is a non-business day the payment will be made on the first business day after the scheduled payment date.<li>`BEFORE` - If a scheduled payment date is a non-business day the payment will be made on the first business day before the scheduled payment date.<li>`ON` - If a scheduled payment date is a non-business day the payment will be made on that day regardless.<li>`ONLY` - Payments only occur on business days. If a scheduled payment date is a non-business day the payment will be ignored.</ul>",
      "enum": [
        "AFTER",
        "BEFORE",
        "ON",
        "ONLY"
      ],
      "type": [
        "string",
        "null"
      ]
    },
    "paymentsRemaining": {
      "description": "Indicates the number of payments remaining in the schedule. If both _finalPaymentDate_ and _paymentsRemaining_ are present then payments will stop according to the most constraining value, If neither field is present the payments will continue indefinitely.",
      "example": 1,
      "type": [
        "integer",
        "null"
      ],
      "x-cds-type": "PositiveInteger"
    }
  },
  "required": [
    "intervals"
  ],
  "type": "object"
}